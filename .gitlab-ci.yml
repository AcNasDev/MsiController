variables:
  GIT_DEPTH: 0

build:
  stage: build
  image: ubuntu:25.04
  before_script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential cmake ninja-build pkg-config git qt6-base-dev qt6-declarative-dev qt6-tools-dev qt6-tools-dev-tools qt6-charts-dev qt6-qmltooling-plugins libdbus-1-dev libsystemd-dev linux-headers-$(uname -r)
  script:
    - git submodule update --init --recursive
    - mkdir -p build
    - cd build
    - cmake .. -G Ninja
    - cmake --build .
  only:
    - main

sync_to_github:
  stage: deploy
  image: docker:20.10
  script:
    - apk add --no-cache git
    - git checkout main
    - git branch --set-upstream-to=origin/main main
    - git pull --rebase origin main
    - git push https://$GITHUB_TOKEN@github.com/AcNasDev/MsiController.git
  only:
    - main

clazy_check:
  stage: test
  image: ubuntu:25.04
  before_script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends build-essential cmake ninja-build pkg-config git qt6-base-dev qt6-declarative-dev qt6-tools-dev qt6-tools-dev-tools qt6-charts-dev qt6-qmltooling-plugins libdbus-1-dev libsystemd-dev linux-headers-$(uname -r) clang-tools clang-tidy
  script:
    - git submodule update --init --recursive
    - mkdir -p build
    - export CLAZY_CHECKS=level2
    - export CLAZY_IGNORE_DIRS=.*build.*
    - cd build
    - cmake .. -G Ninja -DCMAKE_CXX_COMPILER=clazy -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
    - cmake --build . --parallel
    #- clazy-standalone -checks=level2 -export-fixes=fixes.yaml -p compile_commands.json
    - find .. -path "../build" -prune -o \( -name "*.cpp" -o -name "*.h" \) -print | xargs clazy-standalone -export-fixes=fixes.yaml -p ./compile_commands.json
    - cat fixes.yaml || echo "No fixes.yaml generated"
    # - clang-apply-replacements .
  artifacts:
    when: always
    paths:
      - build/fixes.yaml
    reports:
      junit: build/fixes.yaml
  only:
    - main