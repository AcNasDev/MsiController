name: CI

on:
  push:
    branches:
      - main

env:
  GIT_DEPTH: 0

jobs:
  all-in-one:
    runs-on: docker
    container:
      image: ubuntu:25.10
    steps:
      - name: Install Node.js and git
        run: |
          apt-get update
          apt-get install -y curl ca-certificates
          curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
          apt-get install -y nodejs git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install build dependencies
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential cmake ninja-build pkg-config \
            qt6-base-dev qt6-declarative-dev qt6-tools-dev qt6-tools-dev-tools \
            qt6-charts-dev qt6-qmltooling-plugins libdbus-1-dev libsystemd-dev \
            linux-headers-generic clang-tools clang-tidy clazy
          
          # Находим установленную версию kernel headers для передачи в CMake
          INSTALLED_KERNEL=$(ls /lib/modules/ | grep generic | head -1)
          echo "Found kernel headers: $INSTALLED_KERNEL"
          echo "KERNEL_VERSION=$INSTALLED_KERNEL" >> $GITHUB_ENV

      - name: Build project
        run: |
          mkdir -p build
          cd build
          # Передаем найденную версию ядра в CMake
          echo "Building with KERNEL_VERSION=$KERNEL_VERSION"
          export KERNEL_VERSION=$KERNEL_VERSION
          cmake .. -G Ninja
          cmake --build .

      - name: Clazy check
        run: |
          mkdir -p build
          export CLAZY_CHECKS=level1
          export CXX_FLAGS="-Werror -Wall -Wextra"
          cd build
          cmake .. -G Ninja -DCMAKE_CXX_COMPILER=clazy -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_CXX_FLAGS="-Werror -Wall -Wextra"
          cmake --build . --parallel

      - name: Sync to GitHub
        env:
          GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }}
        run: |
          git checkout main
          git branch --set-upstream-to=origin/main main || true
          git pull --rebase origin main
          git push https://$GITHUBTOKEN@github.com/AcNasDev/MsiController.git
